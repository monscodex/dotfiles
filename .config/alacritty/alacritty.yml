env:
  TERM: xterm-256color

window:
  padding:
    x: 2

  title: Alacritty

  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

scrolling:
  history: 5000

# FONT CONFIGURATION
font:
  # Normal (roman) font face
  normal:
    family: CaskaydiaCove Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    family: CaskaydiaCove Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    family: CaskaydiaCove Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 10.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 1

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# COLORSCHEMES
schemes:
  # Tokyo Night theme, based on both:
  #   https://github.com/ghifarit53/tokyonight-vim
  #   https://github.com/enkia/tokyo-night-vscode-theme
  tokyo-night: &tokyo-night # Default colors
    primary:
      background: "0x1a1b26"
      foreground: "0xa9b1d6"

    # Normal colors
    normal:
      black: "0x32344a"
      red: "0xf7768e"
      green: "0x9ece6a"
      yellow: "0xe0af68"
      blue: "0x7aa2f7"
      magenta: "0xad8ee6"
      cyan: "0x449dab"
      white: "0x787c99"

    # Bright colors
    bright:
      black: "0x444b6a"
      red: "0xff7a93"
      green: "0xb9f27c"
      yellow: "0xff9e64"
      blue: "0x7da6ff"
      magenta: "0xbb9af7"
      cyan: "0x0db9d7"
      white: "0xacb0d0"

  tokyo-night-storm: &tokyo-night-storm # Default colors
    primary:
      background: "0x24283b"
      foreground: "0xa9b1d6"

    # Normal colors
    normal:
      black: "0x32344a"
      red: "0xf7768e"
      green: "0x9ece6a"
      yellow: "0xe0af68"
      blue: "0x7aa2f7"
      magenta: "0xad8ee6"
      cyan: "0x449dab"
      white: "0x9699a8"

    # Bright colors
    bright:
      black: "0x444b6a"
      red: "0xff7a93"
      green: "0xb9f27c"
      yellow: "0xff9e64"
      blue: "0x7da6ff"
      magenta: "0xbb9af7"
      cyan: "0x0db9d7"
      white: "0xacb0d0"
  nord: &nord
    primary:
      background: "#2e3440"
      foreground: "#d8dee9"
      dim_foreground: "#a5abb6"
    cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    vi_mode_cursor:
      text: "#2e3440"
      cursor: "#d8dee9"
    selection:
      text: CellForeground
      background: "#4c566a"
    search:
      matches:
        foreground: CellBackground
        background: "#88c0d0"
      bar:
        background: "#434c5e"
        foreground: "#d8dee9"
    normal:
      black: "#3b4252"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#88c0d0"
      white: "#e5e9f0"
    bright:
      black: "#4c566a"
      red: "#bf616a"
      green: "#a3be8c"
      yellow: "#ebcb8b"
      blue: "#81a1c1"
      magenta: "#b48ead"
      cyan: "#8fbcbb"
      white: "#eceff4"
    dim:
      black: "#373e4d"
      red: "#94545d"
      green: "#809575"
      yellow: "#b29e75"
      blue: "#68809a"
      magenta: "#8c738c"
      cyan: "#6d96a5"
      white: "#aeb3bb"

colors: *tokyo-night

# Background opacity
window.opacity : 1

# CURSOR
cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - â–‡ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

  hints:
    launcher:
      program: librewolf
      args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

# KEYBINDINGS
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
  # (Windows, Linux, and BSD only)
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: Plus, mods: Control, action: ResetFontSize }

  - { key: Paste, action: Paste }
  - { key: Copy, action: Copy }
  - { key: PageUp, mods: Shift, action: ScrollPageUp, mode: ~Alt }
  - { key: PageDown, mods: Shift, action: ScrollPageDown, mode: ~Alt }
  - { key: Home, mods: Shift, action: ScrollToTop, mode: ~Alt }
  - { key: End, mods: Shift, action: ScrollToBottom, mode: ~Alt }
  # Vi Mode
  - { key: Space, mods: Alt, action: ToggleViMode }
  - { key: Escape, action: ToggleViMode }
  - { key: I, mode: Vi, action: ScrollToBottom }
  - { key: I, mode: Vi, action: ToggleViMode }
  - { key: C, mods: Control, mode: Vi, action: ScrollToBottom }
  - { key: C, mods: Control, mode: Vi, action: ToggleViMode }
  - { key: Escape, mode: Vi, action: ClearSelection }
  - { key: Y, mods: Control, mode: Vi, action: ScrollLineUp }
  - { key: E, mods: Control, mode: Vi, action: ScrollLineDown }
  - { key: G, mode: Vi, action: ScrollToTop }
  - { key: G, mods: Shift, mode: Vi, action: ScrollToBottom }
  - { key: B, mods: Control, mode: Vi, action: ScrollPageUp }
  - { key: F, mods: Control, mode: Vi, action: ScrollPageDown }
  - { key: K, mods: Control, mode: Vi, action: ScrollHalfPageUp }
  - { key: J, mods: Control, mode: Vi, action: ScrollHalfPageDown }
  - { key: Y, mode: Vi, action: Copy }
  - { key: Y, mode: Vi, action: ClearSelection }
  - { key: V, mode: Vi, action: ToggleNormalSelection }
  - { key: V, mods: Shift, mode: Vi, action: ToggleLineSelection }
  - { key: V, mods: Control, mode: Vi, action: ToggleBlockSelection }
  - { key: V, mods: Alt, mode: Vi, action: ToggleSemanticSelection }
  - { key: Return, mode: Vi, action: Open }
  - { key: K, mode: Vi, action: Up }
  - { key: J, mode: Vi, action: Down }
  - { key: H, mode: Vi, action: Left }
  - { key: L, mode: Vi, action: Right }
  - { key: Up, mode: Vi, action: Up }
  - { key: Down, mode: Vi, action: Down }
  - { key: Left, mode: Vi, action: Left }
  - { key: Right, mode: Vi, action: Right }
  - { key: Key0, mode: Vi, action: First }
  - { key: Key4, mode: Vi, action: Last }
  - { key: Key6, mods: Shift, mode: Vi, action: FirstOccupied }
  - { key: H, mods: Shift, mode: Vi, action: High }
  - { key: M, mods: Shift, mode: Vi, action: Middle }
  - { key: L, mods: Shift, mode: Vi, action: Low }
  - { key: B, mode: Vi, action: SemanticLeft }
  - { key: W, mode: Vi, action: SemanticRight }
  - { key: E, mode: Vi, action: SemanticRightEnd }
  - { key: B, mods: Shift, mode: Vi, action: WordLeft }
  - { key: W, mods: Shift, mode: Vi, action: WordRight }
  - { key: E, mods: Shift, mode: Vi, action: WordRightEnd }
  - { key: Key5, mods: Shift, mode: Vi, action: Bracket }
  - { key: Slash, mode: Vi, action: SearchForward }
  - { key: Slash, mods: Shift, mode: Vi, action: SearchBackward }
  - { key: N, mode: Vi, action: SearchNext }
  - { key: N, mods: Shift, mode: Vi, action: SearchPrevious }
  - { key: Key5, mods: Shift, mode: Vi, action: Bracket }
  - { key: Slash, mode: Vi, action: SearchForward }
  - { key: Slash, mods: Shift, mode: Vi, action: SearchBackward }
  - { key: N, mode: Vi, action: SearchNext }
  - { key: N, mods: Shift, mode: Vi, action: SearchPrevious }
